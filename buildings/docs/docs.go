// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/buildings": {
            "get": {
                "description": "get buildings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buildings"
                ],
                "summary": "List buildings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "equal city",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "equal year",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "equal number_floors",
                        "name": "number_floors",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.Building"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create new building",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buildings"
                ],
                "summary": "Create building",
                "parameters": [
                    {
                        "description": "building data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.Building"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "storage.Building": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "example": "Saint Petersburg"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "name": {
                    "type": "string",
                    "example": "Building #1"
                },
                "number_floors": {
                    "type": "integer",
                    "example": 22
                },
                "year": {
                    "type": "integer",
                    "example": 2022
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Buildings API",
	Description:      "This is a sample server buildings server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
