definitions:
  create.RequestCreate:
    properties:
      name:
        example: Dmitriy
        type: string
      patronymic:
        example: Vasilevich
        type: string
      surname:
        example: Ushakov
        type: string
    type: object
  create.ResponseCreate:
    properties:
      id:
        example: 1
        type: integer
      status:
        example: OK
        type: string
    type: object
  list.ResponsePersons:
    properties:
      persons:
        items:
          $ref: '#/definitions/storage.Person'
        type: array
      status:
        example: OK
        type: string
    type: object
  response.RequestError:
    properties:
      error:
        example: error description
        type: string
      status:
        example: Error
        type: string
    type: object
  response.RequestOK:
    properties:
      status:
        example: OK
        type: string
    type: object
  storage.Person:
    properties:
      age:
        example: 43
        type: integer
      country_id:
        example: UA
        type: string
      gender:
        example: male
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Dmitriy
        type: string
      patronymic:
        example: Vasilevich
        type: string
      surname:
        example: Ushakov
        type: string
    type: object
  update.RequestUpdate:
    properties:
      age:
        type: integer
      country_id:
        type: string
      gender:
        type: string
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  updatefull.RequestUpdateFull:
    properties:
      age:
        type: integer
      country_id:
        type: string
      gender:
        type: string
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
paths:
  /health:
    get:
      description: Checking functionality
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RequestOK'
      summary: Checking functionality
      tags:
      - health
  /persons:
    get:
      description: Get list persons
      parameters:
      - description: Limit persons
        in: query
        name: limit
        type: integer
      - description: offset persons
        in: query
        name: offset
        type: integer
      - description: Greater than or equal to age
        in: query
        name: age_from
        type: integer
      - description: Less than or equal to age
        in: query
        name: age_to
        type: integer
      - description: Filter by gender
        in: query
        name: gender
        type: string
      - description: Filter by country id
        in: query
        name: country_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/list.ResponsePersons'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.RequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.RequestError'
      summary: List persons
      tags:
      - persons
    post:
      consumes:
      - application/json
      description: Create new person
      parameters:
      - description: person data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/create.RequestCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/create.ResponseCreate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.RequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.RequestError'
      summary: Create person
      tags:
      - persons
  /persons/{id}:
    delete:
      description: Delete person
      parameters:
      - description: person id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RequestOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.RequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.RequestError'
      summary: Delete person
      tags:
      - persons
    get:
      description: Get information about a person
      parameters:
      - description: person id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.Person'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.RequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.RequestError'
      summary: Get person
      tags:
      - persons
    patch:
      consumes:
      - application/json
      description: Update some fields person information
      parameters:
      - description: person id
        in: path
        name: id
        required: true
        type: integer
      - description: person data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/update.RequestUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RequestOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.RequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.RequestError'
      summary: Update person
      tags:
      - persons
    put:
      consumes:
      - application/json
      description: Update all person information
      parameters:
      - description: person id
        in: path
        name: id
        required: true
        type: integer
      - description: person data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/updatefull.RequestUpdateFull'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RequestOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.RequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.RequestError'
      summary: Update person
      tags:
      - persons
swagger: "2.0"
